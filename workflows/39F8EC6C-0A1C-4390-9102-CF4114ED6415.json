{"actions":[{"pauseBeforeRunning":false,"colorLabel":1,"pauseWithoutShowingParameters":false,"customTitle":"","class":"WorkflowActionGetEditorText","parameters":{"foldedTextOption":0,"foldedTextReplacement":"…"}},{"pauseBeforeRunning":false,"colorLabel":1,"pauseWithoutShowingParameters":false,"customTitle":"Extract lines with dates","class":"WorkflowActionFilterLines","parameters":{"expression":{"type":"advancedText","tokenRanges":{"{2, 1}":"%date:MM","{4, 1}":"%date:dd","{0, 1}":"%date:yyyy"},"text":"?-?-?"},"outputFormatOption":1,"comparisonType":0}},{"pauseBeforeRunning":false,"colorLabel":1,"pauseWithoutShowingParameters":false,"customTitle":"","class":"WorkflowActionSelectFromList","parameters":{"title":"Select the name of Evernote Note","list":{"type":"advancedText","tokenRanges":{"{0, 1}":"Input"},"text":"?"},"showInPopover":false,"allowMultipleSelection":false}},{"pauseBeforeRunning":false,"colorLabel":1,"pauseWithoutShowingParameters":false,"customTitle":"","class":"WorkflowActionSelectRange","parameters":{"range":{"type":"advancedText","tokenRanges":{"{0, 1}":"Input"},"text":"?"},"relativeOption":0}},{"pauseBeforeRunning":false,"colorLabel":1,"pauseWithoutShowingParameters":false,"customTitle":"","class":"WorkflowActionStoreVariable","parameters":{"name":"filename","value":{"type":"advancedText","tokenRanges":{"{0, 1}":"Input"},"text":"?"}}},{"pauseBeforeRunning":false,"colorLabel":1,"pauseWithoutShowingParameters":false,"customTitle":"","class":"WorkflowActionSelectRange","parameters":{"range":{"type":"advancedText","tokenRanges":{"{2, 1}":"%editor:selected-range-end","{0, 1}":"%editor:selected-range-start"},"text":"?:?+1"}}},{"pauseBeforeRunning":false,"colorLabel":1,"pauseWithoutShowingParameters":false,"customTitle":"","class":"WorkflowActionReplaceSelectedText","parameters":{"replacement":{"type":"advancedText","tokenRanges":{},"text":""}}},{"pauseBeforeRunning":false,"colorLabel":3,"pauseWithoutShowingParameters":false,"customTitle":"Task Clone Tag","class":"WorkflowActionStoreVariable","parameters":{"name":"taskclone","value":{"type":"advancedText","tokenRanges":{},"text":"Send_To_OmniFocus"}}},{"pauseBeforeRunning":false,"colorLabel":5,"pauseWithoutShowingParameters":false,"customTitle":"","class":"WorkflowActionShowAlert","parameters":{"button2Value":{"type":"advancedText","tokenRanges":{},"text":"yes"},"button1Title":"No","button1Value":{"type":"advancedText","tokenRanges":{},"text":"no"},"showCancelButton":false,"title":"Evernote Tags","message":{"type":"advancedText","tokenRanges":{},"text":"Fetch Evernote tags?"},"button3Title":"","button3Value":{"type":"advancedText","tokenRanges":{},"text":""},"button2Title":"Yes"}},{"pauseBeforeRunning":false,"colorLabel":5,"pauseWithoutShowingParameters":false,"customTitle":"","class":"WorkflowActionCondition","parameters":{"comparisonType":0,"expression2":{"type":"advancedText","tokenRanges":{},"text":"yes"},"expression1":{"type":"advancedText","tokenRanges":{"{0, 1}":"Input"},"text":"?"}}},{"pauseBeforeRunning":false,"colorLabel":5,"pauseWithoutShowingParameters":false,"customTitle":"Fetch Evernote Tags","class":"WorkflowActionRunScript","parameters":{"script":"#coding: utf-8\nimport workflow\nimport console\nimport webbrowser\nimport keychain\nimport pickle\nimport evernote.edam.userstore.constants as UserStoreConstants\nimport evernote.edam.type.ttypes as Types\nfrom evernote.api.client import EvernoteClient\n\n#keychain.delete_password('evernote', 'editorial')\nlogin = keychain.get_password('evernote', 'editorial')\nif login is not None:\n\tauth_token = pickle.loads(login)\nelse:\n\ttoken_choice = console.alert('Token Needed', 'A Developer Token is needed. Go get one?', 'Yes', 'I have One', 'Cancel')\n\tif token_choice == 1:\n\t\twebbrowser.open('safari-https:\/\/www.evernote.com\/Login.action?targetUrl=%2Fapi%2FDeveloperToken.action')\n\t\traise KeyboardInterrupt\n\telif token_choice == 2:\n\t\tauth_token = console.password_alert('Evernote Developer Token', 'Paste Your Evernote Developer Token')\n\t\tpickle_token = pickle.dumps(auth_token)\n\t\tkeychain.set_password('evernote', 'editorial', pickle_token)\n\telse:\n\t\traise KeyboardInterrupt\n\nconsole.show_activity('Getting Tags...')\nclient = EvernoteClient(token=auth_token, sandbox=False)\nnote_store = client.get_note_store()\nconsole.show_activity('Getting Tags...')\n\nnote = Types.Note()\ns = []\n\n# List all of the tags in the user's account\ntags = note_store.listTags()\nconsole.show_activity('Getting Tags...')\nfor tag in tags:\n\tconsole.show_activity()\n\ts.append(tag.name) \n\tconsole.show_activity('Getting Tags...')\n\toutput = '\\n'.join(s)\nworkflow.set_output(output)\n"}},{"pauseBeforeRunning":false,"colorLabel":5,"pauseWithoutShowingParameters":false,"customTitle":"","class":"WorkflowActionSortLines","parameters":{"sortOrder":0}},{"pauseBeforeRunning":false,"colorLabel":5,"pauseWithoutShowingParameters":false,"customTitle":"","class":"WorkflowActionSelectFromList","parameters":{"title":"Select Evernote Tags","list":{"type":"advancedText","tokenRanges":{"{0, 1}":"Input"},"text":"?"},"showInPopover":false,"allowMultipleSelection":true}},{"pauseBeforeRunning":false,"colorLabel":5,"pauseWithoutShowingParameters":false,"customTitle":"","class":"WorkflowActionStoreVariable","parameters":{"name":"fetched_tags","value":{"type":"advancedText","tokenRanges":{"{0, 1}":"Input"},"text":"?"}}},{"pauseBeforeRunning":false,"colorLabel":5,"pauseWithoutShowingParameters":false,"customTitle":"","class":"WorkflowActionStoreVariable","parameters":{"name":"selected_tags","value":{"type":"advancedText","tokenRanges":{"{2, 1}":"taskclone","{0, 1}":"fetched_tags"},"text":"?\n?"}}},{"pauseBeforeRunning":false,"colorLabel":5,"pauseWithoutShowingParameters":false,"customTitle":"","class":"WorkflowActionConditionEnd","parameters":{}},{"pauseBeforeRunning":false,"pauseWithoutShowingParameters":false,"customTitle":"","class":"WorkflowActionStoreVariable","parameters":{"name":"title","value":{"type":"advancedText","tokenRanges":{"{0, 1}":"filename"},"text":"?"}}},{"pauseBeforeRunning":false,"pauseWithoutShowingParameters":false,"customTitle":"","class":"WorkflowActionSetClipboard","parameters":{}},{"pauseBeforeRunning":false,"pauseWithoutShowingParameters":false,"customTitle":"","class":"WorkflowActionGetEditorText","parameters":{"foldedTextOption":0,"foldedTextReplacement":"…"}},{"pauseBeforeRunning":false,"pauseWithoutShowingParameters":false,"customTitle":"","class":"WorkflowActionStoreVariable","parameters":{"name":"text","value":{"type":"advancedText","tokenRanges":{"{0, 1}":"Input"},"text":"?"}}},{"pauseBeforeRunning":false,"pauseWithoutShowingParameters":false,"customTitle":"","class":"WorkflowActionFormatString","parameters":{"text":{"type":"advancedText","tokenRanges":{"{0, 1}":"text"},"text":"?"}}},{"pauseBeforeRunning":false,"pauseWithoutShowingParameters":false,"customTitle":"","class":"WorkflowActionConvertMarkdown","parameters":{"tables":true,"superscript":true,"smartypants":true,"strikethrough":true,"metadata":false,"autolinks":true,"footnotes":true}},{"pauseBeforeRunning":false,"pauseWithoutShowingParameters":false,"customTitle":"","class":"WorkflowActionStoreVariable","parameters":{"name":"htmltext","value":{"type":"advancedText","tokenRanges":{"{0, 1}":"Input"},"text":"?"}}},{"pauseBeforeRunning":false,"colorLabel":4,"pauseWithoutShowingParameters":false,"customTitle":"","class":"WorkflowActionRunScript","parameters":{"script":"#coding: utf-8\nimport workflow\nimport webbrowser\nimport console\nimport keychain\nimport pickle\nimport evernote.edam.userstore.constants as UserStoreConstants\nimport evernote.edam.type.ttypes as Types\nfrom evernote.api.client import EvernoteClient\nimport markdown2\nimport editor\n\n\n#keychain.delete_password('evernote', 'editorial')\nlogin = keychain.get_password('evernote', 'editorial')\nif login is not None:\n\tauth_token = pickle.loads(login)\nelse:\n\ttoken_choice = console.alert('Token Needed', 'A Developer Token is needed. Go get one?', 'Yes', 'I have One', 'Cancel')\n\tif token_choice == 1:\n\t\twebbrowser.open('safari-https:\/\/www.evernote.com\/Login.action?targetUrl=%2Fapi%2FDeveloperToken.action')\n\t\traise KeyboardInterrupt\n\telif token_choice == 2:\n\t\tauth_token = console.password_alert('Evernote Developer Token', 'Paste Your Evernote Developer Token')\n\t\tpickle_token = pickle.dumps(auth_token)\n\t\tkeychain.set_password('evernote', 'editorial', pickle_token)\n\telse:\n\t\traise KeyboardInterrupt\n\ncurrent_text = editor.get_text()\nevernote_tags = workflow.get_variable('selected_tags')\ndoc_title = workflow.get_variable('title').encode('utf-8')\nhtml_text = workflow.get_variable('htmltext').encode('utf-8')\n\nclient = EvernoteClient(token=auth_token, sandbox=False)\nnote_store = client.get_note_store()\nnotebooks = note_store.listNotebooks()\n\n\nif evernote_tags is None:\n tags = workflow.get_variable('taskclone').split('\\n')\nelif evernote_tags is not None:\n tags = []\n tagnew = evernote_tags.split('\\n')\n for x in tagnew:\n  tags.append(x)\n\n\n\n\n# To create a new note, simply create a new Note object and fill in\n# attributes such as the note's title.\nnote = Types.Note()\nnote.title = doc_title\nnote.tagNames = tags\n\nnote.content = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>'\nnote.content += '<!DOCTYPE en-note SYSTEM ' \\\n   '\"http:\/\/xml.evernote.com\/pub\/enml2.dtd\">'\nnote.content += '<en-note>' + html_text + '<br\/>'\nnote.content += '<\/en-note>'\n\n# Finally, send the new note to Evernote using the createNote method\n# The new Note object that is returned will contain server-generated\n# attributes such as the new note's unique GUID.\ncreated_note = note_store.createNote(note)\n\n#print \"Successfully created a new note with GUID: \", created_note.guid\n\nconsole.hud_alert(doc_title+' saved to the default folder in Evernote','success')\n"}}]}