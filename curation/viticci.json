{"workflows": [{"url": "http://editorial-app.appspot.com/workflow/5812369510891520/mIqNTGb4sZk", "description": "This workflow posts to Dreamwidth or LiveJournal depending on user input, and could be set to post to other sites which are based on LiveJournal\u2019s codebase and use the same XMLRPC API.\n\nThe workflow fetches a tag list, automatically sets the location, and allows for the user's mood and music to be passed to LiveJournal before opening the entry in Safari. \n\nThis must be combined with my Set Password workflow to work properly (the title of the service you set in the Set Password workflow must be the same as the one you select from the list in this workflow). In order to use this workflow, edit the 'username' variable to your username.\n\nThis workflow was based in part on the 'Post to WordPress' workflow by Federico Viticci. It was also greatly informed by posts on both EllisLab and the lj-clients community on LiveJournal.", "title": "Post to Dreamwidth/LiveJournal"}, {"url": "http://editorial-app.appspot.com/workflow/5854718291083264/o3s36klwF7g", "description": "Export a Markdown document from Editorial to Ulysses. Requested file name will be added as the # Title of a new sheet in Ulysses at the top.", "title": "Markdown to Ulysses"}, {"url": "http://editorial-app.appspot.com/workflow/6686426292813824/_h8Rt_02vEs", "description": "Easily publish posts to LiveJournal. The workflow fetches a tag list, automatically sets the location, and allows for the user's mood and music to be passed to LiveJournal before opening the entry in Safari. Please note that this workflow sends the user's LiveJournal password in the clear.\n\nIn order to use this workflow, edit the 'username' variable to your LiveJournal username and the 'service' variable to whatever you chose when you created a password with the Set Password workflow, also by @johncoxon.\n\nThis workflow was based in part on the 'Post to WordPress' workflow by Federico Viticci. It was also greatly informed by posts on both EllisLab and the lj-clients community on LiveJournal.", "title": "Post To LiveJournal"}, {"url": "http://editorial-app.appspot.com/workflow/5880864978239488/MswKLs1z0rE", "description": "This workflow converts markdown to html and uploads it to default Evernote notebook. In addition, filters lines with dates in format YYYY-MM-DD and sets it as Evernote Note Title and fetches Evernote Tags so those could be assigned to the note.\n\nBased on @viticci \"Fetch Tags\" workflow and HTML to EN workflow.\n\nMore info: http://www.cookiemash.cz/od-editorial-k-omnifocus/\n\n", "title": "Upload to Evernote"}, {"url": "http://editorial-app.appspot.com/workflow/5796072928575488/87CW4oubwJo", "description": "Queries the iTunes Store API to search for an app's name, returns formatted name and price (in USD) in a popover.\n\nThe workflow can optionally create an affiliate link if affiliate information is provided in two variables at the top.\n\nMore information on affiliate links and iTunes Search API: \n\nhttp://www.apple.com/itunes/affiliates/\n\nhttp://www.apple.com/itunes/affiliates/resources/documentation/itunes-store-web-service-search-api.html#searching\n\n", "title": "Get App Price"}, {"url": "http://editorial-app.appspot.com/workflow/5270448723984384/vjmhPRrJ0lE", "description": "Given a tweet URL in the clipboard, the workflow queries the Twitter API to get the HTML embed code for that tweet. The Twitter account configured in the iOS Settings is used for authentication. HTML is copied into the clipboard.", "title": "Embed"}, {"url": "http://editorial-app.appspot.com/workflow/5803491947708416/VfFTOP94PJA", "description": "Create a new file from Instapaper's Share Notes feature. Made for Markdown exporting only.", "title": "InstapaperNotes"}, {"url": "http://editorial-app.appspot.com/workflow/4962768541188096/V59ideK9eVY", "description": "Create a new file from Instapaper's Share Notes feature. Made for Markdown exporting only.", "title": "InstapaperNotes"}, {"url": "http://editorial-app.appspot.com/workflow/5889616041213952/1m4xiE7UyvY", "description": "Publish a post to WordPress. Extract a URL at the top of the document to optionally assign it to a custom field. Launch another workflow at the end to shorten the just-published post with Bitly.\n\nOriginally by @viticci.", "title": "Post To WordPress"}, {"url": "http://editorial-app.appspot.com/workflow/5008399615918080/FUBFF0Wdftg", "description": "**Note:** This is an update to my earlier \"Post Markdown to WordPress\" workflow.\n\nTake a Markdown document and post it to a WordPress blog. Since WordPress now will accept Markdown directly there is no conversion to HTML done on the document. This workflow allows choosing a category(ies), entering post tags, choosing a post status, and scheduling a post by giving a date in the future.\n\nThe workflow also looks for a Multimarkdown \"Title:\" tag at the top of the file. If one is found a choice of that title or the file name is given for use as the post title.\n\nEnter your blog details in the parameters for the Get Connection Details action. \"Service\" is just a key used to store your blog password; it can be anything you like. Reset Password, copied from Federico Viticci's posting workflow, allows you to clear your stored password.", "title": "Post Markdown to WordPress"}, {"url": "http://editorial-app.appspot.com/workflow/6176074253729792/iHdyCErby2g", "description": "Rechercher livres et applications dans l'iBookStore et l'App Store, sur la base d'une s\u00e9lection ou d'une requ\u00eate personnalis\u00e9e.\n\nRemplace le texte ou ins\u00e8re un lien Markdown (avec ID affili\u00e9), suivi du prix dans le Store entre parenth\u00e8ses.\n\n[Nom App / Livre](lien) (prix)\n\nLe workflow est comment\u00e9 et color\u00e9, avec les variables \u00e0 modifier (ID Affili\u00e9 et pays du Store).\n\nN'h\u00e9sitez pas \u00e0 me contacter pour toute question ou nouvelle fonctionnalit\u00e9.\n\nMerci \u00e0 @viticci pour le script de requ\u00eate issu de son workflow \"Get App Price\".", "title": "Recherche App Store pour Livres & Apps"}, {"url": "http://editorial-app.appspot.com/workflow/6110859470307328/iG1jud7Lz-U", "description": "Search for books or apps in iBookStore and App Store, based on selection or typed query.\n\nReplaces text or inserts Markdown link (with affiliate ID), followed with store pricing in brackets :\n\n[App / Book Name](link) (price)\n\nThe workflow has comments and colors, with variables to be edited (Affiliate ID and Store country).\n\nFeel free to contact me for questions or new features.\n\nThanks to @viticci for the query script from his \"Get App Price\" workflow.", "title": "App Store search for Books & Apps"}, {"url": "http://editorial-app.appspot.com/workflow/6084824452300800/xHRj1B5NYsw", "description": "This workflow allows a selected Bible reference to be looked up in the English Standard Version, through Crossway's API, and returned as a markdown footnote.\n\nSee related workflow for a blockquote format at http://www.editorial-workflows.com/workflow/6398031989571584/a3n-NNsLNc0\n\nFootnote workflow modified from Federico Viticci's \"New Footnote\" Workflow. ", "title": "Bible Verse Footnote"}, {"url": "http://editorial-app.appspot.com/workflow/6315218711871488/2kPlQ5oXDeM", "description": "Creates a reference-style Markdown link based on either a) clipboard contents or b) the current browser URL. \n\nThis workflow adapts Federico Viticci's workflow for creating Markdown links.", "title": "Markdown Link"}, {"url": "http://editorial-app.appspot.com/workflow/6544362062217216/I_IZb5-jmcc", "description": "Send multiple items in a row to Fantastical as separate lines. Requires input text.", "title": "FantastiParse"}, {"url": "http://editorial-app.appspot.com/workflow/5926460686598144/hmt5pRW0sLg", "description": "Queries the iTunes Store API to search for a media item and returns a markdown link. If text is already selected, it is used as the link title.\n\nSearchable media includes Music (by artist, album, or track), Movies, TV Shows, Apps (iPhone, iPad, Mac), Podcast, and eBooks.\n\nThanks to @viticci for the base framework for this workflow!", "title": "iTunes Link"}, {"url": "http://editorial-app.appspot.com/workflow/5245623007707136/ec89LmdYQhI", "description": "Take a Markdown document and post it to a WordPress blog. Since WordPress now will accept Markdown directly there is no conversion to HTML done on the document. This workflow allows choosing a category(ies), entering post tags, and choosing a post status.\n\nThe workflow also looks for a Multimarkdown \"Title:\" tag at the top of the file. If one is found a choice of that title or the file name is given for use as the post title.\n\nEnter your blog details in the parameters for the Get Connection Details action. \"Service\" is just a key used to store your blog password; it can be anything you like. Reset Password, copied from Federico Viticci's posting workflow, allows you to clear your stored password.", "title": "Post Markdown to WordPress"}, {"url": "http://editorial-app.appspot.com/workflow/5880461184204800/WykOoS1yXEM", "description": "Select text first that will have inline or reference link info appended. \n\nThis workflow adapts Federico Viticci's workflow for creating MD links from whatever page is open in the internal browser and enables it to work with info stored in the Clipboard too. This is not only great if you're doing a research session in browsers external to Editorial. It also great for creating wiki style links to other Editorial docs in your repository (local or Dropbox). The great thing about Federico's original workflow is that it allows you to choose inline or reference when creating the MD link and this provides that same functionality. ", "title": "Link MD (clipboard)"}, {"url": "http://editorial-app.appspot.com/workflow/5825534994939904/QfJhTBtdBmM", "description": "Retrieves the RSS feed for your Instapaper account and displays all articles in a given folder. You can display Unread, Liked, and any folders you've created. The feeds can be found on your Instapaper account online. \n\nEdit the quoted sections in Select from List action to replace with the URL for corresponding feed (without the quotes!). There needs to be a tab between the folder name and the feed url to designate the url as output. Follow that format to add more folders if desired. \n\n* This is built on the Get RSS Feeds workflow by @viticci ", "title": "Instapaper Feeds"}, {"url": "http://editorial-app.appspot.com/workflow/5823477705605120/isuheFVF7NE", "description": "Read iCloud Tabs as lines of a remote text file, and show them in a popover. Tap line to open the tab's URL in the Editorial browser.", "title": "Tabs"}]}